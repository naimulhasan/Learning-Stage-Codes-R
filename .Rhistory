dtx[dtx$bmi>=4000 & dtx$bmi<=6000 & dtx$division=="Sylhet",5]
dtx[dtx$bmi>=4000 & dtx$bmi<=6000,5]
variable.names(dtx)
summary(dtx$division)
dvsn<-summary(dtx$division)
dvsn
rm(dvsn)
dvsn<-summary(dtx$division)
dvsn
dvsn[1]
namespace(dvsn)
dtx1<-dtx[dtx$bmi>=9998,]
rm(dtx1)
dtx1<-dtx[dtx$bmi<9998,]
View(dtx1)
dvsn1<-summary(dtx1$division)
dvsn1
sum(dvsn1)
sampledtx<-dtx[sample(1:nrow(dtx),nrow(dtx)*.2),replace=F]
sampledtx<-dtx[sample(1:nrow(dtx),nrow(dtx)*.2,replace=F),]
View(sampledtx)
rm(sampledtx)
sampledtx1<-dtx1[sample(1:nrow(dtx1),nrow(dtx1)*.2,replace=F),]
View(sampledtx1)
dtx2<-sort(dtx1$division)
dtx2
dtx2<-order(dtx1$division)
dtx2<-dtx1[order(dtx1$division),]
View(dtx2)
factor(dtx2$division)
levels(factor(dtx2$division))
sp <- split(dtx2, list(factor(dtx2$division)))
View(sp)
samples <- lapply(sp, function(x) x[sample(1:nrow(x), nrow(x)*.20, FALSE),])
out <- do.call(rbind, samples)
View(out)
summary(sampledtx1$division)
summary(out$division)
rm(out)
sdtx2 <- do.call(rbind, samples)
summary(sdtx2$division)
summary(dtx2$division)
View(sdtx2)
dvsn<-levels(factor(dtx2$division))
for(i in 1:7)
{
print(i<-c(nai[i]<-mean(sdtx2[sdtx2$division==dvsn[i],5])))
}
nai
nai<-c("ad","fa")
for(i in 1:7)
{
print(i<-c(nai[i]<-mean(sdtx2[sdtx2$division==dvsn[i],5])))
}
nai
for(i in 1:7)
{
print(i<-c(nai[i]<-mean(dtx2[sdtx2$division==dvsn[i],5])))
}
for(i in 1:7)
{
print(i<-c(nai[i]<-mean(sdtx2[sdtx2$division==dvsn[i],5])))
}
for(i in 1:7)
{
print(i<-c(nai[i]<-mean(dtx2[dtx2$division==dvsn[i],5])))
}
rm(sampledtx1)
mn<-c("ad","fa")
s_d<-c(14,16)
for(i in 1:7)
{
i<-c(s_d[i]<-sd(dtx2[dtx2$division==dvsn[i],5]))
print(i<-c(mn[i]<-mean(dtx2[dtx2$division==dvsn[i],5])))
}
mn
for(i in 1:7)
{
c(s_d[i]<-sd(dtx2[dtx2$division==dvsn[i],5]))
print(i<-c(mn[i]<-mean(dtx2[dtx2$division==dvsn[i],5])))
}
s_d
mn
mn<-c("ad","fa")
s_d<-c(14,16)
for(i in 1:7)
{
c(s_d[i]<-sd(dtx2[dtx2$division==dvsn[i],5]))
print(i<-c(mn[i]<-mean(dtx2[dtx2$division==dvsn[i],5])))
}
mn
s_d
mn<-c(10,12)
s_d<-c(14,16)
for(i in 1:7)
{
c(s_d[i]<-sd(dtx2[dtx2$division==dvsn[i],5]))
print(i<-c(mn[i]<-mean(dtx2[dtx2$division==dvsn[i],5])))
}
mn
s_d
mn<-c(10,12)
s_d<-c(14,16)
for(i in 1:7)
{
c(s_d[i]<-sd(dtx2[dtx2$division==dvsn[i],5]))
c(mn[i]<-mean(dtx2[dtx2$division==dvsn[i],5]))
}
mn
s_d
tdtx2<-table(dtx2$bmi,dtx2$plor)
tdtx2
dtx3<-recode(dtx2$bmi,"1000:1849='underweight';1850:2299='Normal'; else='Overweight'")
library(car)
dtx3<-recode(dtx2$bmi,"1000:1849='underweight';1850:2299='Normal'; else='Overweight'")
install.packages('car')
library(car)
dtx2$bmicat<-recode(dtx2$bmi,"1000:1849='underweight';1850:2299='Normal'; else='Overweight'")
tdtx2<-table(dtx2$bmicat,dtx2$plor)
barplot(tdtx2,xlab="plor",ylab = "bmi",
col=c("green","blue","yellow"),
legend.text = T,
args.legend = list(x=8,y=1600))
barplot(tdtx2,xlab="plor",ylab = "bmi",
col=c("green","blue","crymson"),
legend.text = T,
args.legend = list(x=8,y=1600))
barplot(tdtx2,xlab="plor",ylab = "bmi",
col=c("green","blue","crymson red"),
legend.text = T,
args.legend = list(x=8,y=1600))
barplot(tdtx2,xlab="plor",ylab = "bmi",
col=c("green","blue","dark red"),
legend.text = T,
args.legend = list(x=8,y=1600))
bd<-dtx2
boxplot(age, data = bd, main= "Box plot of age",xlab="From data BDHS in 2014",ylab="Age", cex=1, cex.main=1.5, cex.lab=2.0, cex.axis=1.5, col=3, col.main=2, col.lab=4, col.axis=9)
attach(bd)
boxplot(age, data = bd, main= "Box plot of age",xlab="From data BDHS in 2014",ylab="Age", cex=1, cex.main=1.5, cex.lab=2.0, cex.axis=1.5, col=3, col.main=2, col.lab=4, col.axis=9)
count<-table(religion)
barplot(count, main= "Bar plot of religion",xlab="Several Religion",ylab="Number of people", cex=1, cex.main=1.5, cex.lab=2.0, cex.axis=1.5, col=3, col.main=2, col.lab=4, col.axis=9)
box()
x<-table(division)
pie(x, data = bd, main= "Pie diagram of several division",cex=1, cex.main=1.5, cex.lab=2.0, cex.axis=1.5, col=3, col.main=2, col.lab=4, col.axis=9)
box()
hist(bmi,main= "Histogram of bmi",xlab=" Body Mass Index",ylab="Frequency", cex=1, cex.main=1.5, cex.lab=2.0, cex.axis=1.5, col=3, col.main=2, col.lab=4, col.axis=9)
box()
boxplot(age~division, data = bd, main= "Box plot of several division",xlab="Divisions",ylab="Age", cex=1, cex.main=1.5, cex.lab=2.0, cex.axis=1.5, col=3, col.main=2, col.lab=4, col.axis=9)
box()
cor(age, bmi)
plot(age, bmi,main= "Corelation Between ",xlab="Divisions",ylab="Age", cex=1, cex.main=1.5, cex.lab=2.0, cex.axis=1.5, col=3, col.main=2, col.lab=4, col.axis=9)
mod <- lm(bmi~age)
plot(mod)
summary(mod)
plot(mod)
plot(mod)
mn
s_d
summary(dtx2$division)
barplot(tdtx2,xlab="Urban or Rural",ylab = "Body Mass Index",
col=c("green","blue","yellow"),
legend.text = T,
args.legend = list(x=8,y=1600))
chisq.test(tdtx2)
tdtx2
adtx<-attributes(dtx)
dtx<-read.dta(file = "d:/BDHS14.dta",convert.factors = T)
library(foreign)
dtx<-read.dta(file = "d:/BDHS14.dta",convert.factors = T)
adtx<-attributes(dtx)
dtx2
library(foreign)
dtx<-read.dta(file = "d:/BDHS14.dta",convert.factors = T)
dtx
write.csv(dtx,"d:/bdhs.csv", sep=",")
write.csv(dtx,"d:/bdhs.csv",sep=",")
write.table(dtx,"d:/bdhs.csv",sep=",")
a<-c(77,82,48,54,55,75,70,73,68,68,50,40,30,35,45,60,70,75,80,85)
a1<-sort(a)
a1
a1<-sort(a1,decreasing = T)
a1
mean(a1)
meansd(a1)
print(meansd(a1))
mood(a1)
mode(a1)
summary(a1)
frequency(a1)
a1<-factor(a1)
frequency(a1)
a1
summary(a1)
a2<-summary(a1)
a2
max(a2)
levels(max(a2))
level(max(a2))
labels(max(a2))
a1[a1==max(a2)]
a3<-c(30, 35, 40, 45, 48, 50, 54, 55, 60, 68, 70, 73, 75, 77, 80, 82, 85)
mean(a3)
meadian(a)
install.packages(Hmisc)
help(CRAN)
"CRAN.packages"
CRAN.packages(Hmisc)
install.packages("Hmisc")
help(VIF)
help("VIF")
help(Hmisc)
help("Hmisc")
library(Hmisc)
help(VIF)
VIF
matrix(c(1:9), nrow = 3, byrow = TRUE)
help(runif)
help("norm")
help("binom")
help("binomial")
view(banknote)
View(banknote)
View(A)
View(banknote)
rng(0,'twister')
library("setRNG")
install.packages("setRNG")
library("setRNG")
rng(0,'twister')
rnorm2 <- function(n,mean,sd) { mean+sd*scale(rnorm(n)) }
r <- rnorm2(100,4,1)
mean(r)
sd(r)
x
x[x>=10]
matrix(c(1:9), nrow = 3, byrow = TRUE)
matrix(c(1:9), nrow = 3)
xxy<-scan()
plot(x,y)
hist(x)
length(y)
x
sum(x[x>=10.5])
sum(x[x>=10])
length(x[x>=10])
length(x[x<=10])
diag(10)
matrix(1,5,3)
print(A<-cbind(A2,A1))
pbinom(3,10,0.3)
qbinom(0.5, 10, 0.3)
s<-12;u<-5;s%%u
s<-20;u<-3;s%/%u
r <- rnorm2(100,4,1)
mean(r)
sd(r)
r2<-rnorm(100,0,2)
meansd(r2)
print(meansd(r2))
rnorm2 <- function(n,mean,sd) { mean+sd*scale(rnorm(n)) }
r <- rnorm2(100,0,2)
mean(r)
sd(r)
r2<-rnorm(100,0,2)
print(meansd(r2))
rnorm2 <- function(n,mean,sd) { mean+sd*scale(rnorm(n)) }
r <- rnorm2(100,0,2)
mean(r)
sd(r)
r1<-2*scale(rnorm(100))
r1
r1<-rnorm(100,0,2)
r1
r1<-2*scale(rnorm(100),center = T,scale = T)
r1
r1<-2*scale(rnorm(100),center = F,scale = F)
r1
y<-cut(x2,5)
y
y<-x2
y
banknote
vif(banknote)
help(vif)
library("hmsic")
library("hmisc")
library("Hmisc")
help(vif)
install.packages("fmsb")
vif(banknote)
library("fmsb")
help(vif)
for(i in 1:10)
{
x<-rnorm(25)
t.test(x)
}
for(i in 1:10)
{
x<-rnorm(25)
return(t.test(x))
}
for(i in 1:10)
{
x<-rnorm(25)
print(t.test(x))
}
x<-c(1:10)
meannn<-function(x,n)
{
(1/(n-1))*(x-mean(x))^2
}
meann(x,10)
meannn(x,10)
meannn<-function(x,n)
{
sum((1/(n-1))*(x-mean(x))^2)
}
meannn(x,10)
help("sapply")
m1<-matrix(c(1:16),4,4)
dim(m1)
solve(m1)
m1
m1^-1
a<-cov(dt1)*149
b<-solve(a)#inverse matrix
b
a^-1
dim(a)
det(a)
det(m1)
library(RJDBC)
install.packages("RJDBC")
library(RJDBC)
drv <- JDBC("com.ibm.db2.jcc.DBZDriver", "db2jcct4.jar", identifier.quote="'")
library(RJDBC)
help(package=RJDBC)
drv <- JDBC("com.ibm.db2.jcc.DBZDriver", "db2jcct4.jar", identifier.quote="'")
X<-matrix(c(750,250,350,650),2,2)
X
X<-matrix(c(750,250,350,650),2,2,byrow = T)
X
chisq.test(X)
ch<-chisq.test(X)
ch
x<-c(151,1516,16,621,6515,62)
t.test(x)
library(foreign)
library(xlsx)
install.packages("xlsx")
library(xlsx)
read_excel(file.choose())
read_excel("G:\Project 2\TFNew.xlsx")
read_excel("G:\Project2\TFNew.xlsx")
help(read_excel)
library(readxl)
install.packages("readxl")
library(readxl)
read_excel("G:\Project2\TFNew.xlsx")
?read_xlsx
read_xlsx("G:\Project2\TFNew.xlsx")
read_xlsx("G:\TFNew.xlsx")
read_xlsx(G:\TFNew.xlsx)
read_xlsx(G:\"TFNew.xlsx")
readxl_example("file:///G:/Project2/TFNew.xlsx")
readxl_example("G:/Project2/TFNew.xlsx")
read_xlsx("G:/Project2/TFNew.xlsx")
read_xlsx("G:/Project2/TFNew.xlsx",col_names = T)
read_xlsx("G:/Project2/TFNew.xlsx",col_names = T,col_types = NULL)
TF<-read_xlsx("G:/Project2/TFNew.xlsx",col_names = T)
br(TF)
View(TF)
sum(TF$`2006`)
sum(TF[,20])
sum(TF[15,])
sum(TF[15,-1])
TFT<-read_xlsx("G:/Project2/TFTotal.xlsx",col_names = T)
TFT
sum(TFT$ForeignEx)
sort(TFT$Total)
TFT<-read_xlsx("G:/Project2/TFTotal.xlsx",col_names = T)
TFT
TFT$Year[sort(TFT$Total)]
TFT$Year[]
TFT$Year[sort(TFT$Total),1]
TFT$Year[1,sort(TFT$Total)]
View(TFT)
View(TFT)
plot(TFT$Total,TFT$ForeignEx)
lm(TFT$ForeignEx~TFT$Total)
re<-lm(TFT$ForeignEx~TFT$Total)
re
library(ggplot2)
mt<-data.frame(mtcars)
mt
qplot(mt$cyl, geom = "hist")
qplot(mt$cyl, geom = "bar")
qplot(mt$cyl,
geom = "bar",
fill= I("Pink"),
colour=I("Blue"),
xlab = "Cylinders",
ylab= "Number of Vehicles",
main= "Cylinders in mtcars"
)
library(shiny)
install.packages("shiny")
library(shiny)
qplot(mt$cyl,
geom = "bar",
fill= I("Pink"),
colour=I("Blue"),
xlab = "Cylinders",
ylab= "Number of Vehicles",
main= "Cylinders in mtcars"
)
library(ggplot2)
mt<-data.frame(mtcars)
mt
qplot(mt$cyl,
geom = "bar",
fill= I("Pink"),
colour=I("Blue"),
xlab = "Cylinders",
ylab= "Number of Vehicles",
main= "Cylinders in mtcars"
)
qplot(mt$hp,
geom = "histogram",
binwidth=25,
colour=I("black"),
xlim = c(50,250),
xlab = "HORSEPOWER",
ylab = "Number of Cars",
#alpha=T(0)
main = "Histogram"
)
barp<-ggplot(mt,aes(x=1,y=sort(mt$carb),fill=sort(mt$carb))) +
geom_bar(stat = "identity")
print(barp)
print(barp<-barp+coord_polar(theta = 'y'))
print(barp<-barp+theme(
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank())+
labs(y="Carburetors")
)
library(shiny)
setwd("C:/Users/Dolphin-Pc/Documents/R/win-library/3.4/knitr/shiny")
shinyServer(
pageWithSidebar(
headerPanel("My First Shiny App"),
sidebarPanel("Side Bar"),
mainPanel("Main Panel")
)
)
runApp()
shinyServer(
pageWithSidebar(
headerPanel("My First Shiny App"),
sidebarPanel("Side Bar"),
mainPanel("Main Panel")
)
)
runApp()
setwd("C:/Users/Dolphin-Pc/Documents/RstudioProjects/FirstShinyApp")
shinyServer(
pageWithSidebar(
headerPanel("My First Shiny App"),
sidebarPanel("Side Bar"),
mainPanel("Main Panel")
)
)
runApp()
setwd("C:/")
library(shinydashboard)
install.packages("shinydashboard")
library(shinydashboard)
runApp('G:/Programming/R code')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
data3
data3 <- read.table(file="https://mirrors.netix.net/sourceforge/i/ir/irisdss/IRIS.csv", header = T, sep=",")
data3
runApp()
runApp()
faithful
runApp()
runApp()
ceiling(read.table(file="https://mirrors.netix.net/sourceforge/i/ir/irisdss/IRIS.csv", header = T, sep=",")$sepal_length
)
read.table(file="https://mirrors.netix.net/sourceforge/i/ir/irisdss/IRIS.csv", header = T, sep=",")$sepal_length)
read.table(file="https://mirrors.netix.net/sourceforge/i/ir/irisdss/IRIS.csv", header = T, sep=",")$sepal_length
read.table(file="https://mirrors.netix.net/sourceforge/i/ir/irisdss/IRIS.csv", header = T, sep=",")$5.1
read.table(file="https://mirrors.netix.net/sourceforge/i/ir/irisdss/IRIS.csv", header = T, sep=",")
read.table(file="https://mirrors.netix.net/sourceforge/i/ir/irisdss/IRIS.csv", header = T, sep=",")$X5.1
ceiling(read.table(file="https://mirrors.netix.net/sourceforge/i/ir/irisdss/IRIS.csv", header = T, sep=",")$X5.1)
runApp()
runApp()
runApp()
View(a)
